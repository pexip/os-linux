#  not a thing
CONFIG_USB_OHCI_HCD_PLATFORM			- flag<IGNORE>
CONFIG_USB_EHCI_HCD_PLATFORM			- flag<IGNORE>
CONFIG_USB_OHCI_HCD_PPC_OF_LE			- flag<IGNORE>

# Overall defaults
set +all !flag EXPERIMENTAL !flag IGNORE ?type tristate	= m

# Mark debugging symbols.
#  default all debug symbols off
set +pattern '(^|_)DEBUG(_|$)' ?type bool	= n flag<DEBUG>
set +pattern '(^|_)DEBUG(_|$)' ?type tristate	= n flag<DEBUG>

#  exceptions
CONFIG_DEBUG_FS					y note<required debug option>
CONFIG_DEBUG_KERNEL				y note<required debug option>
CONFIG_DEBUG_RODATA				y mark<ENFORCED>
CONFIG_DEBUG_SET_MODULE_RONX			y mark<ENFORCED>
CONFIG_SLUB_DEBUG				y
CONFIG_SCHED_DEBUG				y

# IO Schedulers
set +tree 'IO Schedulers'			= - mark<IO>
set +all ?mark 'IO' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'IO' ?flag EXPERIMENTAL ?type tristate = m note<experimental opt-in>
set +all ?mark 'IO' !flag EXPERIMENTAL ?type tristate = m
#  exceptions
CONFIG_IOSCHED_CFQ				y
CONFIG_IOSCHED_DEADLINE				y
CONFIG_DEFAULT_DEADLINE				y
CONFIG_CFQ_GROUP_IOSCHED			y

# Filesystems
set +tree 'File systems' ?tree 'File systems,NLS' = - mark<Filesystem>
set +all ?mark 'Filesystem' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'Filesystem' ?flag EXPERIMENTAL ?type tristate = m note<experimental opt-in>`
set +all ?mark 'Filesystem' !flag EXPERIMENTAL ?type tristate = m
#  default installer filesystems should be built-in
CONFIG_EXT3_FS					y note<default filesystem> mark<CRITICAL>
CONFIG_EXT4_FS					y note<default filesystem> mark<CRITICAL>
#  filesystems which do not probe
CONFIG_FUSE_FS					y note<not autoloadable>
CONFIG_ECRYPT_FS				y note<not autoloadable>
#  standard options
set +pattern _POSIX_ACL$ !flag EXPERIMENTAL	= y
set +pattern _SECURITY$ !flag EXPERIMENTAL	= y
set +pattern _XATTR$ !flag EXPERIMENTAL		= y
#  sub-sub-systems
CONFIG_MISC_FILESYSTEMS				y
CONFIG_NETWORK_FILESYSTEMS			y
CONFIG_DNOTIFY					y
CONFIG_FANOTIFY					y
CONFIG_FANOTIFY_ACCESS_PERMISSIONS		y
CONFIG_FILE_LOCKING				y
CONFIG_INOTIFY_USER				y
CONFIG_HUGETLBFS				y
CONFIG_SYSFS					y
CONFIG_QUOTA					y
CONFIG_QUOTA_NETLINK_INTERFACE			y
CONFIG_PRINT_QUOTA_WARNING			n
#  btrfs
CONFIG_BTRFS_FS_POSIX_ACL			y
#  cachefiles
CONFIG_CACHEFILES_HISTOGRAM			n
#  CIFS
CONFIG_CIFS_ACL					y
CONFIG_CIFS_DEBUG				y
CONFIG_CIFS_DEBUG2				n
CONFIG_CIFS_DFS_UPCALL				y
CONFIG_CIFS_FSCACHE				y
CONFIG_CIFS_POSIX				y
CONFIG_CIFS_SMB2				y
CONFIG_CIFS_STATS				y
CONFIG_CIFS_STATS2				n
CONFIG_CIFS_UPCALL				y
CONFIG_CIFS_WEAK_PW_HASH			y
#  ext2
CONFIG_EXT2_FS_XIP				n
#  ext3
CONFIG_EXT3_DEFAULTS_TO_ORDERED			y
#  f2fs
CONFIG_F2FS_STAT_FS				y
#  fat
CONFIG_FAT_DEFAULT_CODEPAGE			437
CONFIG_FAT_DEFAULT_IOCHARSET			"iso8859-1"
#  fscache
CONFIG_FSCACHE_HISTOGRAM			n
CONFIG_FSCACHE_OBJECT_LIST			n
CONFIG_FSCACHE_STATS				y
#  gfs2
CONFIG_GFS2_FS_LOCKING_DLM			y
#  jffs2
CONFIG_JFFS2_CMODE_FAVOURLZO			y
CONFIG_JFFS2_COMPRESSION_OPTIONS		y
CONFIG_JFFS2_FS_DEBUG				0
CONFIG_JFFS2_FS_WBUF_VERIFY			n
CONFIG_JFFS2_FS_WRITEBUFFER			y
CONFIG_JFFS2_LZO				y
CONFIG_JFFS2_RTIME				y
CONFIG_JFFS2_RUBIN				n
CONFIG_JFFS2_SUMMARY				n
CONFIG_JFFS2_ZLIB				y
#  jfs
CONFIG_JFS_STATISTICS				y
#  iso9660_fs
CONFIG_JOLIET					y
CONFIG_ZISOFS					y
#  ncpfs
CONFIG_NCPFS_EXTRAS				y
CONFIG_NCPFS_IOCTL_LOCKING			y
CONFIG_NCPFS_NFS_NS				y
CONFIG_NCPFS_NLS				y
CONFIG_NCPFS_OS2_NS				y
CONFIG_NCPFS_PACKET_SIGNING			y
CONFIG_NCPFS_SMALLDOS				n
CONFIG_NCPFS_STRONG				y
#  nfsd
CONFIG_NFSD_V3_ACL				y
CONFIG_NFSD_V3					y
CONFIG_NFSD_V4					y note<experimental opt-in>
#  nfs
CONFIG_NFS_FSCACHE				y
CONFIG_NFS_SWAP					y
CONFIG_NFS_USE_LEGACY_DNS			n
CONFIG_NFS_V3_ACL				y
CONFIG_NFS_V4_1					y
CONFIG_NFS_V4_1_IMPLEMENTATION_ID_DOMAIN	"kernel.org"
#  ntfs
CONFIG_NTFS_RW					n
#  ocfs2
CONFIG_OCFS2_FS_STATS				y
CONFIG_OCFS2_DEBUG_MASKLOG			y
#  procfs
CONFIG_PROC_FS					y
CONFIG_PROC_KCORE				y
CONFIG_PROC_PAGE_MONITOR			y
CONFIG_PROC_SYSCTL				y
CONFIG_PROC_VMCORE				y
#  pstore
CONFIG_PSTORE					y
CONFIG_PSTORE_CONSOLE				n note<can cause machine brickage>
CONFIG_PSTORE_FTRACE				n
#  reiserfs
CONFIG_REISERFS_CHECK				n
CONFIG_REISERFS_PROC_INFO			n
#  romfs
CONFIG_ROMFS_BACKED_BY_BLOCK			y
#  squashfs
CONFIG_SQUASHFS_4K_DEVBLK_SIZE			n
CONFIG_SQUASHFS_EMBEDDED			n
CONFIG_SQUASHFS_FRAGMENT_CACHE_SIZE		3
CONFIG_SQUASHFS_LZO				y
CONFIG_SQUASHFS_XZ				y
CONFIG_SQUASHFS_ZLIB				y
#  tmpfs
CONFIG_TMPFS					y
#  ubifs
CONFIG_UBIFS_FS_ADVANCED_COMPR			n
CONFIG_UBIFS_FS_LZO				y
CONFIG_UBIFS_FS_ZLIB				y
#  xfs
CONFIG_XFS_QUOTA				y
CONFIG_XFS_RT					y

# Subsystems -- mark up for reporting
CONFIG_PCI					y mark<Subsystem>
CONFIG_BT					m mark<Subsystem>
CONFIG_APM					m mark<Subsystem>
CONFIG_ACPI					y mark<Subsystem>

CONFIG_RFKILL					y mark<Subsystem>
CONFIG_HOTPLUG_PCI				y mark<Subsystem>
CONFIG_HOTPLUG_PCI_PCIE				y mark<Subsystem>
CONFIG_HWMON					y mark<Subsystem>
CONFIG_HW_RANDOM				y mark<Subsystem>
CONFIG_MMC					y mark<Subsystem>
CONFIG_CONNECTOR				y mark<Subsystem>
CONFIG_POWER_SUPPLY				y mark<Subsystem>
CONFIG_TCG_TPM					y mark<Subsystem>

CONFIG_LEDS_CLASS				y note<core driver> mark<Subsystem>
CONFIG_FW_LOADER				y note<core CPU firmware updater> mark<Subsystem>

# HID drivers
set +tree 'Device Drivers,HID support,HID'	= - mark<HID>
#  enable modular HID drivers by default
set +all ?mark 'HID' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'HID' ?flag EXPERIMENTAL ?type tristate = m note<experimental opt-in>`
set +all ?mark 'HID' !flag EXPERIMENTAL ?type tristate = m
#  standard forms
set +pattern _FF$ ?mark HID ?type bool !flag EXPERIMENTAL = y
#  the core subsystem
CONFIG_HID					m mark<Subsystem> mark<HID>
#  sub-sub-systems
CONFIG_HIDRAW					y
#  options:
CONFIG_HID_BATTERY_STRENGTH			y
CONFIG_HID_PICOLCD_BACKLIGHT			y
CONFIG_HID_PICOLCD_CIR				y
CONFIG_HID_PICOLCD_FB				y
CONFIG_HID_PICOLCD_LCD				y
CONFIG_HID_PICOLCD_LEDS				y
CONFIG_HID_WIIMOTE_EXT				y

# Networking
set +tree 'Networking options'			= - mark<Networking>
#  enable modular network options by default
set +all ?mark 'Networking' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'Networking' ?flag EXPERIMENTAL ?type tristate = m note<experimental opt-in>`
set +all ?mark 'Networking' !flag EXPERIMENTAL ?type tristate = m
#  enable all vendor menus by default
set +pattern '^NET_VENDOR_' 			= y mark<Networking>
#  the core subsystem
CONFIG_NET					y mark<Subsystem>
CONFIG_NETFILTER				y mark<Subsystem>
CONFIG_NETLABEL					y mark<Subsystem>
CONFIG_NET_SCHED				y mark<Subsystem>
#  IPv6 packets trigger auto-loading of this module and it is easy to trigger
#  a DOS unless this is builtin.  It is also a critical protocol going forward
#  and will become boot essential.
CONFIG_INET					y note<core protocol>
CONFIG_IPV6					y note<core protocol>
#  exceptions networking:
CONFIG_INET_LRO					y note<core networking>
CONFIG_MII					y note<core networking>
CONFIG_TUN					y note<core networking>
CONFIG_TCP_CONG_ADVANCED			y
CONFIG_TCP_CONG_CUBIC				y note<core networking>
#  exceptions network protocols:
CONFIG_UNIX					y note<core protocol>
CONFIG_PACKET					y note<core protocol>
CONFIG_FDDI					y note<core protocol>
CONFIG_PPP					y note<core protocol> mark<Networking>
#  EXPERIMENTAL Network protocols are generally enabled to allow testing:
CONFIG_ECONET					m note<network protocol -- opt-in>
CONFIG_IEEE802154				m note<network protocol -- opt-in>
CONFIG_LAPB					m note<network protocol -- opt-in>
CONFIG_NET_DSA					m note<network protocol -- opt-in>
CONFIG_RDS					m note<network protocol -- opt-in>
CONFIG_TIPC					m note<network protocol -- opt-in>
CONFIG_X25					m note<network protocol -- opt-in>
#  interesting new subsystem
CONFIG_NFC					m note<experimental subsystem -- opt-in> mark<Subsystem>
CONFIG_NFC_NCI					m note<experimental protocol -- opt-in>
#  This option allows bridging between non-IP and IP networks, but is
#  effectivly deprecated.  We _may_ just _may_ have users on older arches
#  so keep it there, but do not spread the pain to systems without these
#  other networks.
CONFIG_WAN_ROUTER				p policy<(arch i386 amd64 powerpc &/ value m) | value n>
#  options:
CONFIG_ARPD					n
CONFIG_ATM_BR2684_IPFILTER			n
CONFIG_ATM_CLIP_NO_ICMP				n 
CONFIG_BATMAN_ADV_BLA				y
CONFIG_BATMAN_ADV_DAT				y
CONFIG_BPF_JIT					y note<REFER TO SECURITY>
CONFIG_BRIDGE_EBT_ULOG				n flag<DEPRECATED>
CONFIG_BRIDGE_IGMP_SNOOPING			y
CONFIG_BRIDGE_NETFILTER				y
CONFIG_CLS_U32_MARK				y
CONFIG_CLS_U32_PERF				n
CONFIG_DCB					y 
CONFIG_DEFAULT_CUBIC				y
CONFIG_GACT_PROB				y
CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION	m note<enable IPv6 experimental features>
CONFIG_IP_ADVANCED_ROUTER			y
CONFIG_IPDDP_DECAP				y
CONFIG_IPDDP_ENCAP				y
CONFIG_IP_FIB_TRIE_STATS			y
CONFIG_IP_MROUTE				y
CONFIG_IP_MROUTE_MULTIPLE_TABLES		n
CONFIG_IP_MULTICAST				y
CONFIG_IP_MULTIPLE_TABLES			y
CONFIG_IP_NF_QUEUE				n flag<DEPRECATED>
CONFIG_IP_PIMSM_V1				y
CONFIG_IP_PIMSM_V2				y
#  IP PNP protocols
CONFIG_IP_PNP					y
CONFIG_IP_PNP_BOOTP				n
CONFIG_IP_PNP_DHCP				y
CONFIG_IP_PNP_RARP				n
CONFIG_IP_ROUTE_MULTIPATH			y
CONFIG_IP_ROUTE_VERBOSE				y
CONFIG_IP_SET_MAX				256
CONFIG_IPV6_MROUTE_MULTIPLE_TABLES		y
CONFIG_IPV6_MROUTE				y
CONFIG_IPV6_MULTIPLE_TABLES			y
CONFIG_IPV6_PIMSM_V2				y
CONFIG_IPV6_PRIVACY				y mark<Security>
CONFIG_IPV6_ROUTER_PREF				y
CONFIG_IPV6_ROUTE_INFO				y
#  ipv6 rapid deployment support
CONFIG_IPV6_SIT_6RD				y
CONFIG_IPV6_SUBTREES				y
#  ipv6 VS support is incomplete and "may be dangerous"
CONFIG_IP_VS_IPV6				n flag<DANGEROUS>
CONFIG_IP_VS_NFCT				y
CONFIG_IP_VS_PROTO_AH				y
CONFIG_IP_VS_PROTO_ESP				y
CONFIG_IP_VS_PROTO_SCTP				y
CONFIG_IP_VS_PROTO_TCP				y
CONFIG_IP_VS_PROTO_UDP				y
CONFIG_IP_VS_SH_TAB_BITS			8
CONFIG_IP_VS_TAB_BITS				12
CONFIG_IPX_INTERN				n
#  mac802.15.4
CONFIG_MAC802154				- note<REVIEW>
CONFIG_NET_CLS_ACT				y
CONFIG_NET_CLS_IND				n flag<DEPRECATED>
#  drop packet netlink: only required for high performance networking
CONFIG_NET_DROP_MONITOR				n
CONFIG_NET_EMATCH				y
CONFIG_NET_EMATCH_STACK				32
CONFIG_NETFILTER_ADVANCED			y
CONFIG_NETFILTER_NETLINK_QUEUE_CT		y
CONFIG_NET_IPGRE_BROADCAST			y note<required by GRE>
CONFIG_NETWORK_SECMARK				y
#  various netfilter contract bits
CONFIG_NF_CONNTRACK_EVENTS			y
CONFIG_NF_CONNTRACK_MARK			y
CONFIG_NF_CONNTRACK_PROCFS			n flag<DEPRECATED>
CONFIG_NF_CONNTRACK_SECMARK			y
CONFIG_NF_CONNTRACK_TIMEOUT			y
CONFIG_NF_CONNTRACK_TIMESTAMP			y
CONFIG_NF_CONNTRACK_ZONES			y
#  SCTP default cookie protocol
CONFIG_SCTP_HMAC_MD5				y
CONFIG_SCTP_COOKIE_HMAC_MD5			y
CONFIG_SCTP_COOKIE_HMAC_SHA1			y
CONFIG_SCTP_DEFAULT_COOKIE_HMAC_SHA1		y
CONFIG_SYN_COOKIES				y mark<Security>
CONFIG_TCP_MD5SIG				y mark<Security>
CONFIG_TIPC_PORTS				8191
CONFIG_VLAN_8021Q_GVRP				y
CONFIG_COPS_DAYNA				y
CONFIG_COPS_TANGENT				y

# USB devices
set +pattern '_USB'				= - mark<USB>
#  enable modular network options by default
set +all ?mark 'USB' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'USB' ?flag EXPERIMENTAL ?type tristate = m note<experimental opt-in>`
set +all ?mark 'USB' !flag EXPERIMENTAL ?type tristate = m
#  the core subsystem
CONFIG_USB					y mark<Subsystem>
#  sub-sub-systems
CONFIG_MEDIA_USB_SUPPORT			y
CONFIG_SND_USB					y
#  exceptions:
CONFIG_USB_EHCI_HCD				y note<ensures USB 2.0/1.1 probe ordering>
CONFIG_USB_OHCI_HCD				y note<ensures USB 2.0/1.1 probe ordering>
CONFIG_USB_UHCI_HCD				y note<ensures USB 2.0/1.1 probe ordering>
CONFIG_USB_XHCI_HCD				y note<ensures USB 2.0/1.1 probe ordering>
CONFIG_USB_OTG					n note<triggers breakage on x86>
#  options:
CONFIG_BRCMFMAC_USB				y
CONFIG_COMEDI_USB_DRIVERS			y
CONFIG_DVB_USB_DIBUSB_MB_FAULTY			n
CONFIG_LINE6_USB_DUMP_CTRL			n
CONFIG_LINE6_USB_DUMP_MIDI			n
CONFIG_LINE6_USB_DUMP_PCM			n
CONFIG_LINE6_USB_IMPULSE_RESPONSE		n
CONFIG_LINE6_USB_RAW				n flag<DANGEROUS>
CONFIG_SND_USB_CAIAQ_INPUT			y
CONFIG_WIMAX_GDM72XX_USB_PM			y
CONFIG_WIMAX_GDM72XX_USB			y
CONFIG_MFD_OMAP_USB_HOST			y
CONFIG_TWL4030_USB				y
CONFIG_XPS_USB_HCD_XILINX			y

# Disk Drivers
set +tree 'Device Drivers,ATA'			= - mark<Disk Drivers>
set +tree 'Device Drivers,IDE'			= - mark<Disk Drivers>
set +tree 'Device Drivers,SCSI device support'	= - mark<Disk Drivers>
#  enable modular options by default
set +all ?mark 'Disk Drivers' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'Disk Drivers' ?flag EXPERIMENTAL ?type tristate = n
set +all ?mark 'Disk Drivers' !mark EXPERIMENTAL ?type tristate = m
#  the core subsystem
CONFIG_SCSI					y mark<Subsystem>
CONFIG_ATA					y mark<Subsystem>
#  sections
CONFIG_SCSI_LOWLEVEL				y
CONFIG_SCSI_LOWLEVEL_PCMCIA			y
#  general options
CONFIG_ATA_VERBOSE_ERROR			y
CONFIG_SCSI_CONSTANTS				y
CONFIG_SCSI_LOGGING				y
CONFIG_SCSI_MULTI_LUN				y
CONFIG_SCSI_PROC_FS				y
CONFIG_SCSI_SCAN_ASYNC				y
#  generic drivers
CONFIG_SATA_PMP					y
CONFIG_ATA_ACPI					y
CONFIG_ATA_SFF					y
CONFIG_ATA_BMDMA				y
CONFIG_SCSI_EATA_LINKED_COMMANDS		y
CONFIG_SCSI_EATA_MAX_TAGS			16
CONFIG_SCSI_EATA_TAGGED_QUEUE			y
#  ATA controllers: some are boot essential on specific architectures
CONFIG_ATA_GENERIC				p policy<(arch i386 amd64 &/ value y) | value m> note<boot essential on i386/amd64>
CONFIG_ATA_PIIX					p policy<(arch i386 amd64 &/ value y) | value m> note<boot essential on i386/amd64>
CONFIG_PATA_ACPI				p policy<(arch i386 amd64 &/ value m)> note<Attachs to _any_ storage class PCI ID, therefore cannot be built in>
CONFIG_PATA_SIS					p policy<(arch i386 amd64 &/ value y) | value m> note<boot essential on i386/amd64>
CONFIG_SATA_SVW					p policy<(arch powerpc &/ value y) | value m> note<boot essential on powerpc>
#  options:
CONFIG_AIC79XX_CMDS_PER_DEVICE			32
CONFIG_AIC79XX_DEBUG_MASK			0
CONFIG_AIC79XX_REG_PRETTY_PRINT			y
CONFIG_AIC79XX_RESET_DELAY_MS			5000
CONFIG_AIC7XXX_CMDS_PER_DEVICE			8
CONFIG_AIC7XXX_DEBUG_MASK			0
CONFIG_AIC7XXX_REG_PRETTY_PRINT			y
CONFIG_AIC7XXX_RESET_DELAY_MS			15000
CONFIG_MEGARAID_NEWGEN				y
CONFIG_SCSI_FC_TGT_ATTRS			y
CONFIG_SCSI_IPR_DUMP				n
CONFIG_SCSI_IPR_TRACE				n
CONFIG_SCSI_IZIP_EPP16				n
CONFIG_SCSI_IZIP_SLOW_CTR			n
CONFIG_SCSI_MPT2SAS_LOGGING			n
CONFIG_SCSI_MPT2SAS_MAX_SGE			128
CONFIG_SCSI_MPT3SAS_LOGGING			n
CONFIG_SCSI_MPT3SAS_MAX_SGE			128
CONFIG_SCSI_MVSAS_TASKLET			n
CONFIG_SCSI_OSD_DPRINT_SENSE			1
CONFIG_SCSI_SAS_ATA				y
CONFIG_SCSI_SAS_HOST_SMP			y
CONFIG_SCSI_SRP_TGT_ATTRS			y
CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS		16
CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE	1
CONFIG_SCSI_SYM53C8XX_MAX_TAGS			64
CONFIG_SCSI_SYM53C8XX_MMIO			y
CONFIG_SCSI_FLASHPOINT				y
CONFIG_SCSI_GENERIC_NCR53C400			y
CONFIG_SCSI_U14_34F_LINKED_COMMANDS		y
CONFIG_SCSI_U14_34F_MAX_TAGS			8
CONFIG_SCSI_U14_34F_TAGGED_QUEUE		y

# Crypto drivers.
set +tree 'CRYPTO'				= - mark<Crypto>
#  enable modular options by default
set +all ?mark 'Crypto' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'Crypto' ?flag EXPERIMENTAL ?type tristate = n
set +all ?mark 'Crypto' !mark EXPERIMENTAL ?type tristate = m
#  the core subsystem
CONFIG_CRYPTO					y mark<Subsystem>
#  exceptions
CONFIG_CRYPTO_CRC32C				y note<dependancy of boot essential>
CONFIG_CRYPTO_CRC32C_INTEL			y note<dependancy of boot essential>
CONFIG_CRYPTO_DEV_PADLOCK			y note<dependancy of boot essential>
CONFIG_CRYPTO_CRC32C				y note<dependancy of boot essential>
CONFIG_CRYPTO_AES				y note<dependancy of boot essential>
CONFIG_CRYPTO_CBC				y note<dependancy of boot essential>
CONFIG_CRYPTO_ECB				y note<dependancy of boot essential>
CONFIG_CRYPTO_HMAC				y note<dependancy of boot essential>
CONFIG_CRYPTO_MANAGER				y note<dependancy of boot essential>
CONFIG_CRYPTO_MD5				y note<dependancy of boot essential>
CONFIG_CRYPTO_SHA1				y note<dependancy of boot essential>
CONFIG_CRYPTO_SHA256				y note<dependancy of boot essential>
CONFIG_CRYPTO_LZO				y note<dependancy of boot essential>
CONFIG_CRC16					y note<dependancy of boot essential>
CONFIG_CRC32					y note<dependancy of boot essential>
CONFIG_ENCRYPTED_KEYS				y note<dependancy of boot essential>
CONFIG_TRUSTED_KEYS				y note<dependancy of boot essential>
#  needed for module signing
CONFIG_ASYMMETRIC_KEY_TYPE			y
CONFIG_ASYMMETRIC_PUBLIC_KEY_SUBTYPE		y
CONFIG_CRYPTO_SHA512				y
CONFIG_PUBLIC_KEY_ALGO_RSA			y
CONFIG_X509_CERTIFICATE_PARSER			y
#  options:
CONFIG_CRYPTO_HW				y
CONFIG_CRYPTO_MANAGER_DISABLE_TESTS		y flag<TESTING>
CONFIG_CRYPTO_TEST				m flag<TESTING>
CONFIG_CRYPTO_DEV_NX				y
CONFIG_CRYPTO_DEV_FSL_CAAM_INTC			y
CONFIG_CRYPTO_DEV_FSL_CAAM_INTC_COUNT_THLD	255
CONFIG_CRYPTO_DEV_FSL_CAAM_INTC_TIME_THLD	2048
CONFIG_CRYPTO_DEV_FSL_CAAM_RINGSIZE		9
CONFIG_CRYPTO_DEV_HIFN_795X_RNG			y

# PHY support
set +tree 'Device Drivers,NETDEVICES,PHYLIB'	= - mark<PHYS>
#  PHY devices with non-standard naming.
CONFIG_B43_PHY_HT				- mark<PHYS>
CONFIG_B43_PHY_N				- mark<PHYS>
CONFIG_STE10XP					- mark<PHYS>
#  enable modular network options by default
set +all ?mark 'PHYS' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'PHYS' ?flag EXPERIMENTAL ?type tristate = y note<experimental opt-in>`
set +all ?mark 'PHYS' !flag EXPERIMENTAL ?type tristate = y note<not autoloadable>
#  the core subsystem
CONFIG_PHYLIB					y mark<Subsystem> mark<PHYS>
CONFIG_FIXED_PHY				y
#  options:
CONFIG_B43_PHY_HT				y
CONFIG_B43_PHY_N				y

# INPUT
set +tree 'Device Drivers,Input device support,INPUT' = - mark<INPUT>
set +all ?mark 'INPUT' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'INPUT' ?flag EXPERIMENTAL ?type tristate = m note<experimental opt-in>`
set +all ?mark 'INPUT' !flag EXPERIMENTAL ?type tristate = m
CONFIG_INPUT y mark<Subsystem> mark<INPUT>
#  sub-sub-systems
CONFIG_INPUT_JOYSTICK				y
CONFIG_INPUT_KEYBOARD				y
CONFIG_INPUT_MISC				y
CONFIG_INPUT_MOUSE				y
CONFIG_INPUT_TOUCHSCREEN			y
CONFIG_INPUT_TABLET				y
CONFIG_INPUT_EVDEV				y
CONFIG_INPUT_MOUSEDEV				y
CONFIG_INPUT_UINPUT				y
#  standard forms
set +pattern ^MOUSE_PS2_ ?mark INPUT ?type bool !flag EXPERIMENTAL = y
set +pattern ^TOUCHSCREEN_ ?mark INPUT ?type bool !flag EXPERIMENTAL = y
set +pattern _FF$ ?mark INPUT ?type bool !flag EXPERIMENTAL = y
#  INPUT_KXTJ9_POLLED_MODE -- polling is bad generally
CONFIG_INPUT_KXTJ9_POLLED_MODE			n
#  options:
CONFIG_INPUT_MOUSEDEV_PSAUX			y
CONFIG_INPUT_MOUSEDEV_SCREEN_X			1024
CONFIG_INPUT_MOUSEDEV_SCREEN_Y			768
CONFIG_JOYSTICK_IFORCE_232			y
CONFIG_JOYSTICK_IFORCE_USB			y
CONFIG_JOYSTICK_XPAD_LEDS			y

# SECURITY
set +tree 'Security options'			= - mark<Security>
set +tree 'MODULES,MODULE_SIG'			= - mark<Security>
CONFIG_SECURITY					y mark<Subsystem>
CONFIG_SECURITYFS				y
CONFIG_DEFAULT_SECURITY_APPARMOR		y
CONFIG_SECURITY_APPARMOR			y
CONFIG_SECURITY_APPARMOR_BOOTPARAM_VALUE	1
CONFIG_SECURITY_SELINUX				y
CONFIG_SECURITY_SELINUX_AVC_STATS		y
CONFIG_SECURITY_SELINUX_BOOTPARAM_VALUE		0
CONFIG_SECURITY_SELINUX_BOOTPARAM		y
CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE	1
CONFIG_SECURITY_SELINUX_DEVELOP			y
CONFIG_SECURITY_SELINUX_DISABLE			y	note<REFER TO SECURITY>
CONFIG_SECURITY_SELINUX_POLICYDB_VERSION_MAX	n
CONFIG_SECURITY_TOMOYO				y
CONFIG_SECURITY_TOMOYO_STACKED			y
CONFIG_SECURITY_TOMOYO_ACTIVATION_TRIGGER	"/sbin/init"
CONFIG_SECURITY_TOMOYO_MAX_ACCEPT_ENTRY		2048
CONFIG_SECURITY_TOMOYO_MAX_AUDIT_LOG		1024
CONFIG_SECURITY_TOMOYO_OMIT_USERSPACE_LOADER	n
CONFIG_SECURITY_TOMOYO_POLICY_LOADER		"/sbin/tomoyo-init"
CONFIG_SECURITY_SMACK				y
CONFIG_SECURITY_YAMA				y
CONFIG_SECURITY_YAMA_STACKED			y
CONFIG_EVM					y
CONFIG_IMA					n note<known to cause performance issues>
CONFIG_INTEL_TXT				p policy<(arch i386 amd64 &/ value y) | value n)>
CONFIG_INTEGRITY_SIGNATURE			y
CONFIG_KEYS					y
CONFIG_LSM_MMAP_MIN_ADDR			0
CONFIG_SECURITY_DMESG_RESTRICT			n
CONFIG_SECURITY_NETWORK				y
CONFIG_SECURITY_NETWORK_XFRM			n
CONFIG_SECURITY_PATH				y
# Module signing.
CONFIG_MODULE_SIG				y mark<Subsystem>
CONFIG_MODULE_SIG_FORCE				n
CONFIG_MODULE_SIG_SHA512			y
# Other security related options.
CONFIG_CC_STACKPROTECTOR			y mark<Security>

# SENSORS
set +pattern '^SENSORS_'			= - mark<Sensors>
set +all ?mark 'Sensors' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'Sensors' ?flag EXPERIMENTAL ?type tristate = n
set +all ?mark 'Sensors' !mark EXPERIMENTAL ?type tristate = m
CONFIG_HWMON					y mark<Subsystem> mark<Sensors>
#  exceptions:
CONFIG_SENSORS_SCH56XX_COMMON			- flag<IGNORE>
CONFIG_SENSORS_AMS_I2C				y
CONFIG_SENSORS_AMS_PMU				y

# BLK/CHR DEV
set +tree 'Device Drivers,BLK_DEV' ?pattern (BLK|CHR)_DEV_ = - mark<BLK-CHR>
set +tree 'Device Drivers,SCSI device support' ?pattern (BLK|CHR)_DEV_ = - mark<BLK-CHR>
set +all ?mark 'BLK-CHR' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'BLK-CHR' ?flag EXPERIMENTAL ?type tristate = n
set +all ?mark 'BLK-CHR' !mark EXPERIMENTAL ?type tristate = m
CONFIG_BLK_DEV					y mark<Subsystem> mark<BLK-CHR>
#  exceptions:
CONFIG_BLK_DEV_LOOP				y note<dependancy of boot essential>
CONFIG_BLK_DEV_RAM				y note<dependancy of boot essential>
CONFIG_BLK_DEV_SD				y note<dependancy of boot essential>
CONFIG_BLK_DEV_SR				y note<dependancy of boot essential>
CONFIG_BLK_DEV_HD				n note<very old disk device support>
CONFIG_BLK_DEV_SR_VENDOR			n note<very old tape device support>
CONFIG_CHR_DEV_SG				y note<not autoloadable>
#  options:
CONFIG_BLK_DEV_LOOP_MIN_COUNT			8
CONFIG_BLK_DEV_RAM_COUNT			16
CONFIG_BLK_DEV_RAM_SIZE				65536

# MD
set +tree 'Device Drivers,MD'			= - mark<MD>
set +all ?mark 'MD' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'MD' ?flag EXPERIMENTAL ?type tristate = n
set +all ?mark 'MD' !mark EXPERIMENTAL ?type tristate = m
CONFIG_MD					y mark<Subsystem> mark<MD>
CONFIG_BLK_DEV_DM				y
CONFIG_BLK_DEV_MD				y
#  options:
CONFIG_DM_UEVENT				y
CONFIG_MD_AUTODETECT				y

# Misc Devices -- A2D converters
set +tree 'Device Drivers,Analog to digital converters' = - mark<A2D> mark<Misc Devices>
set +tree 'Device Drivers,IIO staging drivers,Analog to digital converters' = - mark<A2D> mark<Misc Devices>
set +all ?mark 'A2D' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'A2D' ?flag EXPERIMENTAL ?type tristate = n
set +all ?mark 'A2D' !mark EXPERIMENTAL ?type tristate = m
#  options:
CONFIG_AD799X_RING_BUFFER			y
CONFIG_LP8788_ADC				y

# Misc Devices -- D2A converters
set +tree 'Device Drivers,Digital to analog converters' = - mark<D2A> mark<Misc Devices>
set +all ?mark 'D2A' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'D2A' ?flag EXPERIMENTAL ?type tristate = n
set +all ?mark 'D2A' !mark EXPERIMENTAL ?type tristate = m

# EXTCON
set +tree 'Device Drivers,EXTCON'		= - mark<EXTCON> mark<Misc Devices>
set +all ?mark 'EXTCON' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'EXTCON' ?flag EXPERIMENTAL ?type tristate = n
set +all ?mark 'EXTCON' !mark EXPERIMENTAL ?type tristate = m
# subsystem
CONFIG_EXTCON					y mark<Subsystem>

# UBUNTU
set +tree 'Ubuntu Supplied Third-Party Device Drivers' = - mark<UBUNTU>
set +pattern OVERLAYFS_FS			= - mark<UBUNTU>
set +all ?mark 'UBUNTU' ?type tristate		= m
#  exceptions:
CONFIG_AUFS_BRANCH_MAX_127			y
CONFIG_AUFS_BR_FUSE				y
CONFIG_AUFS_BR_HFSPLUS				y
CONFIG_AUFS_BR_RAMFS				y
CONFIG_AUFS_EXPORT				n
CONFIG_AUFS_HNOTIFY				n
CONFIG_AUFS_PROC_MAP				n note<causes build failures> flag<BUILD FAILURE>
CONFIG_AUFS_RDU					n	
CONFIG_AUFS_SHWH				n
CONFIG_AUFS_SP_IATTR				n	
#  DM_RAID45 only appears in PC BIOS based systems
CONFIG_DM_RAID45				p policy<(arch i386 amd64 &/ value m) | value n> note<PC BIOS specific> mark<MD>

# Ubuntu Critical
CONFIG_INIT_PASS_ALL_PARAMS			y mark<CRITICAL> note<upstart>
CONFIG_ZRAM					y mark<CRITICAL> note<small memory support in installer>
CONFIG_ZCACHE					y mark<CRITICAL> note<small memory support in installer>

# RTC
set +tree 'Device Drivers,RTC_CLASS'		= - mark<RTC>
set +all ?mark 'RTC' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'RTC' ?flag EXPERIMENTAL ?type tristate = n
set +all ?mark 'RTC' !mark EXPERIMENTAL ?type tristate = m
CONFIG_RTC_CLASS				y mark<RTC> mark<Subsystem>
#  options:
CONFIG_RTC_DRV_TWL4030				p policy<(flavour omap omap4 &/ value y) | value m> note<boot essential on OMAP3/OMAP4>
CONFIG_RTC_DRV_CMOS				p policy<(arch i386 amd64 &/ value y) | value m> note<boot essential on i386/amd64>
CONFIG_RTC_DRV_M41T80_WDT			y
#  read the rtc at boot and set the system clock
CONFIG_RTC_HCTOSYS				y
CONFIG_RTC_HCTOSYS_DEVICE			"rtc0"
CONFIG_RTC_INTF_DEV_UIE_EMUL			n
#  filesystem interfaces for the rtc
CONFIG_RTC_INTF_DEV				y
CONFIG_RTC_INTF_PROC				y
CONFIG_RTC_INTF_SYSFS				y

# GPIO
set +tree 'Device Drivers,GPIOLIB'		= - mark<GPIO>
set +all ?mark 'GPIO' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'GPIO' ?flag EXPERIMENTAL ?type tristate = n
set +all ?mark 'GPIO' !mark EXPERIMENTAL ?type tristate = m
#  standard forms:
set +pattern ^GPIO_ ?mark GPIO ?type bool !flag EXPERIMENTAL = y
#  options:
CONFIG_GPIO_TWL4030				p policy<(arch armel armhf &/ value y) | value m> note<boot essential on arm>
#  Geode
CONFIG_GPIO_CS5535				p policy<(value CONFIG_OLPC_X01_SCI y &/ value y) | value m> note<dependancy OLPC_X01_SCI=y>
CONFIG_GPIO_GE_FPGA				n

# I2C
set +tree 'Device Drivers,I2C Hardware Bus support'	= - mark<I2C>
set +all ?mark 'I2C' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'I2C' ?flag EXPERIMENTAL ?type tristate = n
set +all ?mark 'I2C' !mark EXPERIMENTAL ?type tristate = m
CONFIG_I2C					y mark<Subsystem> mark<I2C>
#  sub-sub-systems 
CONFIG_I2C_COMPAT				y
CONFIG_I2C_HELPER_AUTO				y
#  options:
CONFIG_I2C_OMAP					p policy<(arch armel armhf &/ value y) | value m> note<boot essential on arm>
CONFIG_I2C_DESIGNWARE_PLATFORM			p policy<(flavour highbank &/ value y) | value m> note<boot essential on highbank>
CONFIG_I2C_POWERMAC				p policy<(arch powerpc &/ value y) | value m> note<boot essential on powerpc>
CONFIG_I2C_ALGOBIT				p policy<(arch powerpc &/ value y) | value m>  note<boot essential dependancy on powerpc>

# Graphics related
set +tree 'Device Drivers,Graphics support'	= - mark<Graphics>
set +all ?mark 'Graphics' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'Graphics' ?flag EXPERIMENTAL ?type tristate = m note<experimental opt-in>
set +all ?mark 'Graphics' !flag EXPERIMENTAL ?type tristate = m
set +pattern ^FB_[^_]+$ ?mark Graphics ?type bool !flag EXPERIMENTAL = y
set +pattern ^FB_[^_]+$ ?mark Graphics ?type bool ?flag EXPERIMENTAL = y note<experimental opt-in>
set +pattern _(KMS|BACKLIGHT|I2C)$ ?mark Graphics ?type bool !flag EXPERIMENTAL = y
CONFIG_FB					y mark<Subsystem>
CONFIG_DRM					p mark<Subsystem> policy<(flavour omap4 &/ value y) | value m> note<boot essential on OMAP4>
#  sub-sub-systems
CONFIG_BACKLIGHT_LCD_SUPPORT			y
CONFIG_BACKLIGHT_CLASS_DEVICE			y
CONFIG_DRM_LOAD_EDID_FIRMWARE			y
CONFIG_FB_MODE_HELPERS				y
CONFIG_FIRMWARE_EDID				y
CONFIG_VGA_ARB					y
CONFIG_VGA_ARB_MAX_GPUS				16
CONFIG_LOGO					n
CONFIG_VGA_CONSOLE				y
CONFIG_VGA_SWITCHEROO				y
CONFIG_FB_TILEBLITTING				y
CONFIG_FONTS					p policy<(flavour omap &/ value y) | value n>
CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY	y
CONFIG_FRAMEBUFFER_CONSOLE_ROTATION		n
CONFIG_VGACON_SOFT_SCROLLBACK			n
#  options:
CONFIG_AGP					y note<not autoloadable> mark<Subsystem>
CONFIG_AGP_AMD64				y note<not autoloadable>
CONFIG_AGP_INTEL				y note<not autoloadable>
CONFIG_AGP_VIA					y note<not autoloadable>
CONFIG_AGP_AMD					y note<not autoloadable>
CONFIG_AGP_NVIDIA				y note<not autoloadable>
CONFIG_FB_CARMINE_DRAM_EVAL			y
CONFIG_DRM_EXYNOS				n flag<BUILD FAILURE>
#CONFIG_DRM_EXYNOS_FIMC				y
#CONFIG_DRM_EXYNOS_IPP				y
#CONFIG_DRM_EXYNOS_ROTATOR			y
CONFIG_DRM_VMWGFX_FBCON				n
CONFIG_FB_CYBER2000_DDC				y
CONFIG_FB_FOREIGN_ENDIAN			n
#  Pulsbough etc
CONFIG_DRM_GMA600				y
CONFIG_DRM_GMA3600				y
#  nouveau
CONFIG_NOUVEAU_DEBUG				5
CONFIG_NOUVEAU_DEBUG_DEFAULT			3
#  exynos
CONFIG_EXYNOS_VIDEO				y
CONFIG_DRM_EXYNOS_DMABUF			y
CONFIG_DRM_EXYNOS_FIMD				y
CONFIG_DRM_EXYNOS_G2D				y
CONFIG_DRM_EXYNOS_HDMI				n
CONFIG_DRM_EXYNOS_VIDI				y
#  aty
CONFIG_FB_ATY_CT				y
CONFIG_FB_ATY_GX				y
#  matrox
CONFIG_FB_MATROX_G				y
CONFIG_FB_MATROX_MILLENIUM			y
CONFIG_FB_MATROX_MYSTIQUE			y
#  MB762XX
CONFIG_FB_MB862XX_PCI_GDC			y
#  PM2
CONFIG_FB_PM2_FIFO_DISCONNECT			y
#  S3
CONFIG_FB_S3_DDC				y
#  SIS
CONFIG_FB_SIS_300				y
CONFIG_FB_SIS_315				y
#  TMIO
CONFIG_FB_TMIO_ACCELL				y
#  via
CONFIG_FB_VIA_X_COMPATIBILITY			y
#  omap2
CONFIG_FB_OMAP2_NUM_FBS				3
CONFIG_OMAP2_DSS_COLLECT_IRQ_STATS		n
CONFIG_OMAP2_DSS_DEBUGFS			n
CONFIG_OMAP2_DSS_DPI				y
CONFIG_OMAP2_DSS_DSI				n
CONFIG_OMAP4_DSS_HDMI				y
CONFIG_OMAP2_DSS_MIN_FCK_PER_PCK		0
CONFIG_OMAP2_DSS_RFBI				n
CONFIG_OMAP2_DSS_SDI				y
CONFIG_OMAP2_DSS_SLEEP_AFTER_VENC_RESET		y
CONFIG_OMAP2_DSS_VENC				y
CONFIG_OMAP2_VRAM_SIZE				16
#  omap2 -- FONTS
CONFIG_FONT_10x18				n
CONFIG_FONT_6x11				n
CONFIG_FONT_7x14				n
CONFIG_FONT_8x8					y
CONFIG_FONT_8x16				y
CONFIG_FONT_ACORN_8x8				y
CONFIG_FONT_MINI_4x6				n
CONFIG_FONT_PEARL_8x8				n
CONFIG_FONT_SUN12x22				n
CONFIG_FONT_SUN8x16				n
#  ps3
CONFIG_FB_PS3_DEFAULT_SIZE_M			9

# CPU Frequency Scaling
set +tree 'Power management and ACPI options,CPU Frequency scaling' = - mark<CPUFREQ>
set +tree 'Device Drivers,PM_DEVFREQ'		= - mark<CPUFREQ>
set +all ?mark 'CPUFREQ' !mark EXPERIMENTAL ?type tristate = m
CONFIG_CPU_FREQ					y mark<Subsystem>
#  cpu governers:
CONFIG_CPU_FREQ_GOV_CONSERVATIVE		y note<not autoloadable>
CONFIG_CPU_FREQ_GOV_ONDEMAND			y note<not autoloadable>
CONFIG_CPU_FREQ_GOV_PERFORMANCE			y note<not autoloadable>
CONFIG_CPU_FREQ_GOV_POWERSAVE			y note<not autoloadable>
CONFIG_CPU_FREQ_GOV_USERSPACE			y note<not autoloadable>
CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE		y note<for bootspeed>
#  cpufreq drivers
CONFIG_X86_ACPI_CPUFREQ				y note<not autoloadable>
CONFIG_X86_ACPI_CPUFREQ_CPB			y
CONFIG_X86_POWERNOW_K8				y note<not autoloadable>
CONFIG_X86_SPEEDSTEP_CENTRINO			y note<not autoloadable>
CONFIG_X86_SPEEDSTEP_ICH			y note<not autoloadable>
CONFIG_X86_SPEEDSTEP_SMI			y note<not autoloadable>
CONFIG_X86_PCC_CPUFREQ				y note<not autoloadable>
CONFIG_X86_CPUFREQ_NFORCE2			y note<not autoloadable>
CONFIG_X86_SPEEDSTEP_CENTRINO_TABLE		y
CONFIG_X86_SPEEDSTEP_RELAXED_CAP_CHECK		y
CONFIG_ARM_OMAP2PLUS_CPUFREQ			y
CONFIG_GENERIC_CPUFREQ_CPU0			y
CONFIG_CPU_FREQ_MAPLE				y
#  cpufreq monitoring
CONFIG_CPU_FREQ_STAT				p policy<(arch i386 amd64 armel armhf &/ value y) | value m> note<dependancy of boot essential>
CONFIG_CPU_FREQ_STAT_DETAILS			y
#  devfreq
CONFIG_DEVFREQ_GOV_PERFORMANCE			y
CONFIG_DEVFREQ_GOV_POWERSAVE			y
CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND		y
CONFIG_DEVFREQ_GOV_USERSPACE			y

# Thermal drivers
set +tree 'Device Drivers,THERMAL' = - mark<THERMAL>
set +all ?mark 'THERMAL' !mark EXPERIMENTAL ?type tristate = m
CONFIG_THERMAL					y mark<Subsystem>
#  options:
CONFIG_CPU_THERMAL				y
#  governers;
CONFIG_FAIR_SHARE				y
CONFIG_STEP_WISE				y
CONFIG_USER_SPACE				y
CONFIG_THERMAL_DEFAULT_GOV_STEP_WISE		y

# Virtualisation
set +pattern '^XEN_'				= - mark<VIRT>
set +pattern '^KVM_'				= - mark<VIRT>
set +pattern '^VIRTIO_'				= - mark<VIRT>
set +pattern 'CGROUP'				= - mark<VIRT>
set +all ?mark 'VIRT' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'VIRT' ?flag EXPERIMENTAL ?type tristate = n
set +all ?mark 'VIRT' !flag EXPERIMENTAL ?type tristate = m
#  standard forms:
set +pattern CGROUP_[^_]+$ ?mark VIRT ?type bool !flag DEBUG !flag EXPERIMENTAL	= y
#  sub-sub-systems
CONFIG_CGROUPS					y
CONFIG_KVM_GUEST				y
# XEN
CONFIG_XEN_BLKDEV_FRONTEND			y note<not autoloadable -- XEN paravirt support>
CONFIG_XEN_NETDEV_FRONTEND			y note<not autoloadable -- XEN paravirt support>
CONFIG_XEN_BACKEND				y
CONFIG_XEN_BALLOON_MEMORY_HOTPLUG		y
CONFIG_XEN_BALLOON				y
CONFIG_XEN_COMPAT_XENFS				y
CONFIG_XEN_MCE_LOG				y
CONFIG_XEN_SCRUB_PAGES				y
CONFIG_XEN_SELFBALLOONING			y
CONFIG_XEN_SYS_HYPERVISOR			y
# KVM
CONFIG_KVM					p policy<(arch powerpc &/ value y) | value m>
CONFIG_KVM_MMU_AUDIT				n
CONFIG_KVM_E500V2				y
CONFIG_KVM_E500MC				y
# VIRTIO
CONFIG_VIRTIO_BLK				p policy<(arch i386 amd64 &/ value y) | (arch armel armhf &/ value n) | value m> note<KVM paravirt support -- not autoloadable>
CONFIG_VIRTIO_NET				p policy<(arch i386 amd64 &/ value y) | (arch armel armhf &/ value n) | value m> note<KVM paravirt support -- not autoloadable>
CONFIG_VIRTIO_PCI				p policy<(arch i386 amd64 &/ value y) | (arch armel armhf &/ value n) | value m> note<KVM paravirt support -- not autoloadable>
CONFIG_VIRTIO_MMIO				p policy<(arch armel armhf &/ value n) | value m> note<KVM paravirt support>
CONFIG_VIRTIO_BALLOON				p policy<(arch armel armhf &/ value n) | value m> note<KVM paravirt support>
CONFIG_SCSI_VIRTIO				m note<tech preview of new feature>
CONFIG_VIRTIO_MMIO_CMDLINE_DEVICES		y
# CGROUPS
CONFIG_CGROUP_HUGETLB				y
#  options:
CONFIG_LGUEST					n

# MEDIA Support
set +tree 'Device Drivers,MEDIA_SUPPORT'	= - mark<MEDIA>
set +all ?mark 'MEDIA' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'MEDIA' ?flag EXPERIMENTAL ?type tristate = m note<experimental opt-in>
set +all ?mark 'MEDIA' !flag EXPERIMENTAL ?type tristate = m
#  subsystem
CONFIG_MEDIA_SUPPORT				y mark<Subsystem>
#  sub-sub-systems
CONFIG_MEDIA_ANALOG_TV_SUPPORT			y
CONFIG_MEDIA_CAMERA_SUPPORT			y
CONFIG_MEDIA_DIGITAL_TV_SUPPORT			y
CONFIG_MEDIA_PARPORT_SUPPORT			y
CONFIG_MEDIA_PCI_SUPPORT			y
CONFIG_MEDIA_RADIO_SUPPORT			y
CONFIG_MEDIA_RC_SUPPORT				y
CONFIG_RADIO_ADAPTERS				y
CONFIG_RC_DECODERS				y
CONFIG_RC_DEVICES				y
CONFIG_V4L_MEM2MEM_DRIVERS			y
CONFIG_V4L_PLATFORM_DRIVERS			y
CONFIG_V4L_TEST_DRIVERS				y
CONFIG_V4L_RADIO_ISA_DRIVERS			y
#  DVB
CONFIG_DVB_DYNAMIC_MINORS			y
CONFIG_DVB_NET					y
CONFIG_DVB_MAX_ADAPTERS				8
CONFIG_DVB_AV7110_OSD				y
#  MEDIA
CONFIG_MEDIA_ATTACH				y
CONFIG_MEDIA_SUBDRV_AUTOSELECT			y
#  RADIO
CONFIG_RADIO_SI470X				y
#  SMS
CONFIG_SMS_SIANO_RC				y
#  USB
CONFIG_USB_PWC_INPUT_EVDEV			y
CONFIG_USB_VIDEO_CLASS_INPUT_EVDEV		y
#  VIDEO
CONFIG_VIDEO_FIXED_MINOR_RANGES			n
CONFIG_VIDEO_CX231XX_RC				y
CONFIG_VIDEO_PVRUSB2_DVB			y
CONFIG_VIDEO_PVRUSB2_SYSFS			y
CONFIG_VIDEO_SAA7134_RC				y
CONFIG_VIDEO_STK1160_AC97			y
#  misc
CONFIG_IR_RX51					n flag<BUILD FAILURE on armhf>

# Staging Drivers
set +tree 'Device Drivers,STAGING'		= - mark<STAGING>
set +all ?mark 'STAGING' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'STAGING' ?flag EXPERIMENTAL ?type tristate = n
set +all ?mark 'STAGING' !flag EXPERIMENTAL ?type tristate = m
#  staging sections:
CONFIG_LIRC_STAGING				y
CONFIG_STAGING_MEDIA				y
#  comedi:
CONFIG_COMEDI_DEFAULT_BUF_MAXSIZE_KB		20480
CONFIG_COMEDI_DEFAULT_BUF_SIZE_KB		2048
CONFIG_COMEDI_MISC_DRIVERS			y
CONFIG_COMEDI_PCI_DRIVERS			y
CONFIG_COMEDI_PCMCIA_DRIVERS			y
CONFIG_COMEDI_ISA_DRIVERS			y
#  lirc:
CONFIG_LIRC_SERIAL_TRANSMITTER			y
#  options:
CONFIG_DT3155_CCIR				n note<US centric>
CONFIG_DT3155_STREAMING				y
CONFIG_PANEL_CHANGE_MESSAGE			n
CONFIG_PANEL_PARPORT				0
CONFIG_PANEL_PROFILE				5
CONFIG_SBE_PMCC4_NCOMM				y
CONFIG_WIMAX_GDM72XX_K_MODE			y
CONFIG_WIMAX_GDM72XX_QOS			y
CONFIG_WIMAX_GDM72XX_WIMAX2			y
CONFIG_DRM_OMAP					n
CONFIG_OMAP_BANDGAP				n
CONFIG_TIDSPBRIDGE				n mark<BUILD FAILURE>
#CONFIG_TIDSPBRIDGE_BACKTRACE			n mark<DEBUG>
#CONFIG_TIDSPBRIDGE_CACHE_LINE_CHECK		n
#CONFIG_TIDSPBRIDGE_NTFY_PWRERR			n
#CONFIG_TIDSPBRIDGE_RECOVERY			y

# Character Devices
set +tree 'Device Drivers,Character devices'	= - mark<CHARACTER>
set +all ?mark 'CHARACTER' ?flag EXPERIMENTAL ?type bool = n
set +all ?mark 'CHARACTER' ?flag EXPERIMENTAL ?type tristate = n
set +all ?mark 'CHARACTER' !flag EXPERIMENTAL ?type tristate = m
#  sub-sub-sections
CONFIG_SERIAL_NONSTANDARD			y
#  kmem
CONFIG_DEVKMEM					n mark<Security>
#  console
CONFIG_TTY_PRINTK				y
#  VTs
CONFIG_VT					y
CONFIG_VT_CONSOLE				y
CONFIG_VT_HW_CONSOLE_BINDING			y
CONFIG_CONSOLE_TRANSLATIONS			y
#  ptys -- allow legacy ptys but allocate 0 at boot.
CONFIG_DEVPTS_MULTIPLE_INSTANCES		y
CONFIG_LEGACY_PTYS				y
CONFIG_LEGACY_PTY_COUNT				0
CONFIG_UNIX98_PTYS				y
#  hpet
CONFIG_HPET					y
CONFIG_HPET_MMAP				y
#  hardware random
CONFIG_HW_RANDOM				y
#  HVC
CONFIG_HVC_XEN					y
CONFIG_HVC_XEN_FRONTEND				y
CONFIG_HVC_DCC					y
CONFIG_HVC_CONSOLE				n
CONFIG_HVC_OPAL					y
CONFIG_HVC_RTAS					y
CONFIG_HVC_UDBG					y
#  serial 8250
CONFIG_SERIAL_8250_CONSOLE			y
CONFIG_SERIAL_8250_DETECT_IRQ			n
CONFIG_SERIAL_8250_EXTENDED			y
CONFIG_SERIAL_8250_MANY_PORTS			y
CONFIG_SERIAL_8250_NR_UARTS			48
CONFIG_SERIAL_8250_RSA				y
CONFIG_SERIAL_8250_RUNTIME_UARTS		32
CONFIG_SERIAL_8250_SHARE_IRQ			y
CONFIG_SERIAL_8250_EM				n
CONFIG_SERIAL_8250 				y note<boot essential -- serial consoles>
CONFIG_SERIAL_8250_PCI				p policy<(arch i386 amd64 armel armhf &/ value y) | value m> note<boot essential -- serial consoles>
CONFIG_SERIAL_8250_PNP				p policy<(arch i386 amd64 armel armhf &/ value y) | value m> note<boot essential -- serial consoles>
#  serial altera
CONFIG_SERIAL_ALTERA_UART_BAUDRATE		115200
CONFIG_SERIAL_ALTERA_UART_MAXPORTS		4
#  serial amba
CONFIG_SERIAL_AMBA_PL011			p policy<(flavour highbank &/ value y) | value m>
CONFIG_SERIAL_AMBA_PL011_CONSOLE		y
#  serial arc
CONFIG_SERIAL_ARC_NR_PORTS			1
#  serial scnxp
CONFIG_SERIAL_SCCNXP				y
CONFIG_SERIAL_SCCNXP_CONSOLE			y
#  serial pmaczilog
CONFIG_SERIAL_PMACZILOG_CONSOLE			y
CONFIG_SERIAL_PMACZILOG_TTYS			n
#  options:
CONFIG_MAX_RAW_DEVS				256
CONFIG_LP_CONSOLE				n
CONFIG_CYZ_INTR					n
CONFIG_IPMI_PANIC_EVENT				n
CONFIG_STALDRV					y
CONFIG_TCG_TPM					y
CONFIG_SERIAL_KGDB_NMI				y
CONFIG_SERIAL_MAX310X				y
CONFIG_SERIAL_OMAP_CONSOLE			y

# CONFIG_USB_OHCI_HCD_PLATFORM and CONFIG_USB_EHCI_HCD_PLATFORM must be off on omap
CONFIG_USB_HCD_BCMA				p policy<(flavour omap &/ value n) | value m> note<USB_{O,E}HCI_HCD_PLATFORM must be off on omap>
CONFIG_USB_HCD_SSB				p policy<(flavour omap &/ value n) | value m> note<USB_{O,E}HCI_HCD_PLATFORM must be off on omap>

#
# XXX: v--- unreviewed annotations.
#

# Boot essential items are always =y
#  subsystems:
#  ACPI drivers
CONFIG_ACPI_AC y note<core ACPI driver>
CONFIG_ACPI_BATTERY y note<core ACPI driver>
CONFIG_ACPI_BUTTON y note<core ACPI driver>
CONFIG_ACPI_FAN y note<core ACPI driver>
CONFIG_ACPI_PROCESSOR y note<core ACPI driver>
CONFIG_ACPI_THERMAL y note<core ACPI driver>
CONFIG_ACPI_HED y note<core ACPI driver>
CONFIG_ACPI_CONTAINER y note<dependancy ACPI_HOTPLUG_CPU>

# Boot essential disk devices
CONFIG_EDD y note<core disk support>

# Core debugging support
CONFIG_KGDB_SERIAL_CONSOLE y note<early debugging support>

# Common boot essential
CONFIG_XZ_DEC y note<boot essential -- initramfs decompressor>
CONFIG_KEYBOARD_ATKBD y note<boot essential -- input device>
CONFIG_SERIO y note<boot essential -- input devices>
CONFIG_SERIO_I8042 y note<boot essential -- input devices>
CONFIG_SERIO_LIBPS2 y note<boot essential -- input devices> 


# Boot essential dependancies
CONFIG_BLK_CGROUP y note<dependancy of boot essential>
CONFIG_DNS_RESOLVER y note<dependancy of boot essential>
CONFIG_CRC_T10DIF y note<dependancy of boot essential>
CONFIG_ZSMALLOC y note<dependancy of boot essential>

# x86 boot essential
CONFIG_PCI_IOAPIC p policy<(arch i386 amd64 &/ value y) | value m> note<boot essential on i386/amd64>
CONFIG_SCSI_SPI_ATTRS p policy<(arch i386 amd64 &/ value y) | value m> note<dependancy of boot essential>
CONFIG_TOSHIBA n note<recommended against use>

# ARM/EFI requires FAT for kernel installation.
CONFIG_FAT_FS p policy<(arch armel armhf i386 amd64 &/ value y) | value m> note<installation essential on ARM and EFI systems>
CONFIG_VFAT_FS p policy<(arch armel armhf i386 amd64 &/ value y) | value m> note<installation essential on ARM and EFI systems>
CONFIG_NLS_CODEPAGE_437 p policy<((flavour omap omap4 | arch i386 amd64) &/ value y) | value m> note<installation essential on ARM and EFI systems>
CONFIG_NLS y note<dependancy of boot essential>

# ARM boot essential devices
CONFIG_MMC_BLOCK p policy<(arch armel armhf &/ value y) | value m> note<boot essential on arm>
CONFIG_MMC_OMAP_HS p policy<(arch armel armhf &/ value y) | value m> note<boot essential on arm>
CONFIG_FB_OMAP2 p policy<(arch armel armhf &/ value y) | value m> note<boot essential on arm>
CONFIG_NOP_USB_XCEIV p policy<(flavour omap highbank &/ value y) | value m> note<boot essential on omap/highbank>
CONFIG_PANEL_GENERIC_DPI p policy<(arch armel armhf &/ value y) | value m> note<boot essential on arm>
CONFIG_REGULATOR_FIXED_VOLTAGE p policy<(arch armel armhf &/ value y) | value m> note<boot essential on arm>
CONFIG_SERIAL_OMAP p policy<(arch armel armhf &/ value y) | value m> note<boot essential on arm>
CONFIG_OMAP2_DSS p policy<(arch armel armhf &/ value y) | value m> note<boot essential on arm>
CONFIG_MMC_SDHCI_PLTFM				p policy<(flavour highbank &/ value y) | value m> note<boot essential on highbank>
CONFIG_NET_CALXEDA_XGMAC			p policy<(flavour highbank &/ value y) | value m> note<boot essential on highbank>
CONFIG_PL330_DMA				p policy<(flavour highbank &/ value y) | value m> note<boot essential on highbank>
CONFIG_SERIO_SERPORT				p policy<(flavour highbank &/ value y) | value m> note<boot essential on highbank>
CONFIG_OMAP_INTERCONNECT			y note<boot essential on omap>
CONFIG_SND					p policy<(flavour omap &/ value y) | value m> note<not autoloadable on omap>
CONFIG_SND_OMAP_SOC_OMAP_TWL4030		p policy<(flavour omap &/ value y) | value m> note<not autoloadable on omap>
CONFIG_SND_SOC					p policy<(flavour omap &/ value y) | value m> note<not autoloadable on omap>
CONFIG_SOUND					p policy<(flavour omap &/ value y) | value m> note<not autoloadable on omap>
CONFIG_USB_MUSB_OMAP2PLUS			y
CONFIG_USB_MUSB_HDRC				p policy<(flavour omap &/ value y) | value m> note<not autoloadable on omap>

# omap3/omap4 boot essential
CONFIG_MTD p policy<(flavour omap &/ value y) | value m> note<boot essential on arm>
CONFIG_MTD_BLKDEVS p policy<(flavour omap &/ value y) | value m> note<boot essential on arm>
CONFIG_MTD_BLOCK p policy<(flavour omap &/ value y) | value m> note<boot essential on arm>
CONFIG_MTD_CHAR p policy<(flavour omap &/ value y) | value m> note<boot essential on arm>
CONFIG_MTD_NAND p policy<(flavour omap &/ value y) | value m> note<boot essential on arm>
CONFIG_MTD_NAND_OMAP2 p policy<(flavour omap &/ value y) | value m> note<boot essential on arm>
CONFIG_MTD_OF_PARTS p policy<(flavour omap &/ value y) | value m> note<boot essential on arm>
CONFIG_KEYBOARD_OMAP4 p policy<(flavour omap4 &/ value y) | value m> note<boot essential on OMAP4>
CONFIG_KEYBOARD_TWL4030 p policy<(flavour omap4 &/ value y) | value m> note<boot essential on OMAP4>
CONFIG_USB_NET_SMSC95XX p policy<(flavour omap4 &/ value y) | value m> note<boot essential on OMAP4>
CONFIG_USB_USBNET p policy<(flavour omap4 &/ value y) | value m> note<boot essential on OMAP4>
CONFIG_HWSPINLOCK_OMAP y note<boot essential on OMAP4>
CONFIG_HWSPINLOCK_ATMEL n note<depends on CONFIG_ARCH_AT91SAM9G45>
CONFIG_HW_RANDOM_ATMEL n note<depends on CONFIG_ARCH_AT91SAM9G45>
CONFIG_LEDS_GPIO p policy<(flavour omap4 &/ value y) | value m> note<enables early heartbeat LEDs>
CONFIG_LEDS_PWM p policy<(flavour omap4 &/ value y) | value m> note<enables early heartbeat LEDs>
CONFIG_LEDS_TRIGGER_HEARTBEAT p policy<(flavour omap4 &/ value y) | value m> note<enables early heartbeat LEDs>
CONFIG_LIB80211 p policy<(flavour omap4 &/ value y) | value m> note<boot essential on OMAP4>
CONFIG_MMC_OMAP p policy<(flavour omap4 &/ value y) | value m> note<boot essential on OMAP4>
CONFIG_MEDIA_SUPPORT p policy<(flavour omap4 &/ value y) | value m> note<boot essential on OMAP4>
CONFIG_MFD_SM501 p policy<(flavour omap4 &/ value y) | value m> note<boot essential on OMAP4>
CONFIG_USB_INVENTRA_DMA p policy<(flavour omap &/ value y) | value n> note<OMAP2 specific feature>

# highbank boot essential
CONFIG_SATA_AHCI_PLATFORM p policy<(flavour highbank &/ value y) | (flavour omap4 &/ value n) | value m> note<boot essential on highbank/build failure on ti-omap4> flag<BUILD FAILURE>
CONFIG_EXT2_FS p policy<(flavour highbank &/ value y) | value m> note<boot essential on highbank>
CONFIG_KEYBOARD_HIGHBANK p policy<(flavour highbank &/ value y) | value m> note<boot essential on highbank>

# POWERPC boot essential devices
CONFIG_FB_VOODOO1 p policy<(arch powerpc &/ value y) | value m> note<boot essential on powerpc>
CONFIG_FB_3DFX p policy<(arch powerpc &/ value y) | value m> note<boot essential on powerpc>
CONFIG_FB_PS3 p policy<(arch powerpc &/ value y) | value m> note<boot essential on powerpc>
CONFIG_FB_ATY128 p policy<(arch powerpc &/ value y) | value m> note<boot essential on powerpc>
CONFIG_FB_RADEON p policy<(arch powerpc &/ value y) | value m> note<boot essential on powerpc>
CONFIG_NVRAM p policy<(arch powerpc &/ value y) | value m> note<boot essential on powerpc>
CONFIG_HW_RANDOM_PASEMI p policy<(arch powerpc &/ value y) | value m> note<dependancy HW_RANDOM>
CONFIG_PS3_PS3AV p policy<(arch powerpc &/ value y) | value m> note<dependancy HW_RANDOM>
CONFIG_PS3_SYS_MANAGER p policy<(arch powerpc &/ value y) | value m> note<dependancy HW_RANDOM>
CONFIG_SERIAL_PMACZILOG p policy<(arch powerpc &/ value y) | value m> note<boot essential -- serial consoles>
CONFIG_THERM_ADT746X p policy<(arch powerpc &/ value y) | value m> note<boot essential -- cooling support>

# XEN host boot essential
CONFIG_XEN_ACPI_PROCESSOR p policy<(arch i386 amd64 &/ value y) | value m> <boot essential on XEN host>

# devices which make no sense on some platforms
CONFIG_PCCARD p policy<(arch armel armhf &/ value n) | value m> note<not a supported interface on arm>

# GRUB2 boot requirement
CONFIG_FRAMEBUFFER_CONSOLE y note<boot essential for grub2 console>

# TESTING options
CONFIG_DMATEST n flag<TESTING>
CONFIG_DEBUG_NX_TEST n flag<TESTING>
CONFIG_BACKTRACE_SELF_TEST n flag<TESTING>
CONFIG_FB_VIRTUAL n flag<TESTING>
CONFIG_MMC_TEST n flag<TESTING>
CONFIG_MMIOTRACE_TEST n flag<TESTING>
CONFIG_RCU_TORTURE_TEST n flag<TESTING>
CONFIG_IEEE802154_FAKEHARD n flag<TESTING>
CONFIG_LKDTM n flag<TESTING>
CONFIG_WL12XX_SDIO_TEST n flag<TESTING>
CONFIG_RING_BUFFER_BENCHMARK n flag<TESTING>
CONFIG_RTC_DRV_TEST n flag<TESTING>
CONFIG_USB_DUMMY_HCD n flag<TESTING>
CONFIG_PCIEAER_INJECT n flag<TESTING>
CONFIG_PPS_CLIENT_KTIMER n flag<TESTING>
CONFIG_CRC32_SELFTEST n flag<TESTING>
CONFIG_OF_SELFTEST n flag<TESTING>
CONFIG_USB_ZERO_HNPTEST n flag<TEST DEVICE>

# DEBUGGING option
CONFIG_BRCMDBG - flag<DEBUG>
CONFIG_USB_XHCI_HCD_DEBUGGING n flag<DEBUG>

# ARM commonly use sd cards as root disks.
CONFIG_MMC_SDHCI p policy<(flavour omap highbank &/ value y) | value m> note<installation essential on omap/highbank>

# Security risk.
CONFIG_ACPI_CUSTOM_METHOD n note<Security: allows arbitrary execution>


# EFI_VARS is required for EFI boot
CONFIG_EFI_VARS y note<EFI boot requirement (d-i)>

# OLD/DEPRECATED things
CONFIG_IA32_AOUT n note<IDE is deprecated>
CONFIG_MOUSE_INPORT n note<very old ISA based mouse support>
CONFIG_OMAP_IOVMM n note<deprecated OMAP support>

# IKCONFIG not required
CONFIG_IKCONFIG n note<not required as configs in /boot>

# POWERPC
CONFIG_PATA_MACIO y note<boot essential for QEMU on powerpc>

# Non-obvious filesystems.
CONFIG_USB_FUNCTIONFS m note<filesystems are opt-in>
CONFIG_USB_GADGETFS m note<filesystems are opt-in>
CONFIG_LOGFS n note<highly discouraged for use>
CONFIG_USB_OTG_BLACKLIST_HUB n note<OTG white/blacklists are disabled>
CONFIG_USB_OTG_WHITELIST n note<OTG white/blacklists are disabled>

# filesystem misc
CONFIG_SQUASHFS_4K_DEVBLK_SIZE n note<non-default block size>

# ARM omap3
CONFIG_PANEL_DVI y note<required for omap3 video>
CONFIG_PANEL_SHARP_LS037V7DW01 p policy<(flavour omap &/ value y) | value m> note<required for omap3 video>
CONFIG_PANEL_TPO_TD043MTEA1 p policy<(flavour omap &/ value y) | value m> note<required for omap3 video>
CONFIG_SND_OMAP_SOC p policy<(flavour omap &/ value y) | value m> note<required for omap3 sound>
CONFIG_SND_OMAP_SOC_MCBSP p policy<(flavour omap &/ value y) | value m> note<required for omap3 sound>
CONFIG_SND_OMAP_SOC_OMAP3_BEAGLE p policy<(flavour omap &/ value y) | value m> note<required for omap3 sound>
CONFIG_USB_MUSB_TUSB6010 p policy<(flavour omap highbank &/ value n) | value m> note<USB_MUSB choice>
CONFIG_USB_OMAP n note<not used for our OMAP3/4 h/w>
CONFIG_DMA_OMAP y

# ARM gadget mode
CONFIG_USB_GADGET p policy<(flavour omap omap4 &/ value y) | value m> note<not autoprobable -- only present commonly on omap>
CONFIG_USB_OTG y note<dependancy of a boot essential>
CONFIG_USB_G_MULTI p policy<(flavour omap omap4 &/ value m) | value n> note<omap3/omap4 specific feature>
CONFIG_USB_M66592 n note<gadget device>

# powerpc64-smp requires this as CONFIG_MAPLE is enabled
CONFIG_ATA_NONSTANDARD p policy<(flavour powerpc64-smp &/ value y) | value n> note<required for powerpc64-smp dep of CONFIG_MAPLE>

# APM Emulation is deliberately off on ARM to prevent new use.
CONFIG_APM_EMULATION p policy<(arch armel armhf &/ value n) | value m> note<deliberatly forced off for ARM>

# BLK_DEV_XD -- ancient drives
CONFIG_BLK_DEV_XD n note<ancient drives from pre-history>

# Geode specific, should be enabled by drivers that need it not manually.
CONFIG_CS5535_MFGPT n note<should be disabled by default>

# DVB_DUMMY_FE only recommended for experts
CONFIG_DVB_DUMMY_FE n note<expert use only>

# ARM unsupported SOC
#CONFIG_FTGMAC100 n note<unsupported ARM device>
#CONFIG_FTMAC100 n note<unsupported ARM device>
#CONFIG_ARCH_EXYNOS n note<unsupported ARM arch>
#CONFIG_ARCH_HIGHBANK n note<unsupported ARM arch>
#CONFIG_ARCH_PICOXCELL n note<unsupported ARM arch>
#CONFIG_ARCH_PRIMA2 n note<unsupported ARM arch>
#CONFIG_ARCH_ZYNQ n note<unsupported ARM arch>

CONFIG_ARCH_MULTIPLATFORM			p policy<(flavour highbank &/ value y) | value n>
CONFIG_ARCH_OMAP				p policy<(flavour omap &/ value y) | value n>

# Options which really should not have an option at all.
CONFIG_SIGMA n note<unused common driver infrastructure>
CONFIG_DM9000_FORCE_SIMPLE_PHY_POLL n

# Items which are simply miss identified
CONFIG_DEBUG_LL_UART_NONE y note<not actually debug>
CONFIG_USB_SERIAL_DEBUG m note<not actually debug>

# Experimental
CONFIG_RTL8192DE m note<experimental wireless driver -- opt-in>
CONFIG_BLK_DEV_UMEM m note<experimental NVRAM disk driver -- opt-in>

# Optional scheduling control
CONFIG_CFS_BANDWIDTH y note<optional scheduling control -- opt-in>

# Hardware specific experimental options.
CONFIG_EDAC_SBRIDGE m note<h/w specific experimental option -- opt-in>
CONFIG_SM_FTL m note<h/w specific experimental option -- opt-in>
CONFIG_SPI_SPIDEV m note<h/w specific experimental option -- opt-in>
CONFIG_ATH6KL_USB m note<h/w specific experimental option -- opt-in>
CONFIG_USB_KC2190 y note<h/w specific experimental option -- opt-in>

# Dummy drivers
CONFIG_IIO_SIMPLE_DUMMY_BUFFER n note<dummy driver>
CONFIG_IIO_SIMPLE_DUMMY_EVENTS n note<dummy driver>

# Options where the default is simply too broad:

# The intel IOMMU being on by default causes a slew of issues with
# machines.  We therefore enable its use, but default it off.
CONFIG_INTEL_IOMMU_DEFAULT_ON n note<the IOMMU can trigger boot failures>

# H/W specific options
CONFIG_PATA_HPT3X3_DMA n note<DMA mode is documented problematic>
CONFIG_B43_BCMA_EXTRA n note<BRCMSMAC is enabled disable to avoid ID overlaps>

# Valid y/n options which are in a sensible position.
CONFIG_PPC_ICSWX_USE_SIGILL n note<reviewed 05/2012>
#  forces padding mode, without this we can select at runtime
CONFIG_USB_SERIAL_SAFE_PADDED n note<reviewed 07/2012>
#  allows the console to move to an external USB device
CONFIG_USB_SISUSBVGA_CON n note<reviewed 07/2012>

# Old/Deprecated
CONFIG_SCSI_AIC7XXX_OLD n note<deprecated in favour of aic7xxx>

# OSS is handled via pulseaudio
CONFIG_SND_PCM_OSS n note<deprecated in favour of pulseaudio emulation>

# Poulsbo is handled by DRM_GMA500
CONFIG_STUB_POULSBO n note<deprecated in favour of CONFIG_DRM_GMA500>

# Risky
CONFIG_RTAS_FLASH n note<potentially risky allowing flash updates>

# Only valid on fully certified platforms
CONFIG_ATH9K_DFS_CERTIFIED n note<only valid for kernels for certified platforms only>

# CONFIG_AUDIT_LOGINUID_IMMUTABLE is not compatible with upstart
CONFIG_AUDIT_LOGINUID_IMMUTABLE n note<incompatible with upstart>

# Machine specific on systems we cannot encounter.
CONFIG_GPIO_EM n note<h/w not encounted>

# Standard options.
CONFIG_PANIC_ON_OOPS n note<keep working if at all possible>

# CEPHs dependancies
CONFIG_BLK_DEV_RBD m note<CEPH client side support>

# CGROUP modifications.
CONFIG_BLK_DEV_THROTTLING y note<CGROUP disk consumption control>

# Block Dev
CONFIG_BLK_DEV_XIP n note<prevents use of HIGHMEM for ram disks>

#
# XXX: ^--- unreviewed annotations.
#

# temporarily disabled options -- build failures.
CONFIG_TI_CPSW					p policy<(flavour omap &/ value n) | value m> flag<BUILD FAILURE>
CONFIG_USB_MUSB_DSPS				p policy<(flavour omap &/ value n) | value m> flag<BUILD FAILURE>
CONFIG_LIS3L02DQ				p policy<(arch armhf &/ value n) | value m> flag<BUILD FAILURE>
CONFIG_EZX_PCAP					p policy<(arch armhf &/ value n) | value m> flag<BUILD FAILURE>
CONFIG_TOUCHSCREEN_EGALAX			p policy<(flavour omap4 &/ value n) | value m> flag<BUILD FAILURE> not
e<FTBS on ti-omap4>
CONFIG_TOUCHSCREEN_EETI				p policy<(flavour omap4 &/ value n) | value m> flag<BUILD FAILURE> not
e<FTBS on ti-omap4>
CONFIG_SENSORS_AK8975				p policy<(flavour omap4 &/ value n) | value m> flag<BUILD FAILURE> note<FTBS on ti-omap4>
CONFIG_IIO					p policy<(flavour omap4 &/ value n) | value m> flag<BUILD FAILURE> note<FTBS on ti-omap4>

# Ensure DEPRECATED options are off.
set +all ?flag DEPRECATED ?type bool		= n
set +all ?flag DEPRECATED ?type tristate	= n

# Ensure DANGEROUS things are turned off.
set +all ?flag DANGEROUS = n
