From: Ben Hutchings <ben@decadent.org.uk>
Date: Sun, 01 Jun 2014 20:05:38 +0100
Subject: Revert "x86,preempt: Fix preemption for i386"

This reverts commit 4c03d4699182312ed42257834b915492af16022a from
Linux 3.14.5, which conflicts with the current PREEMPT_RT patch
series.

--- a/arch/x86/include/asm/preempt.h
+++ b/arch/x86/include/asm/preempt.h
@@ -5,18 +5,6 @@
 #include <asm/percpu.h>
 #include <linux/thread_info.h>
 
-#ifdef CONFIG_X86_32
-/*
- * i386's current_thread_info() depends on ESP and for interrupt/exception
- * stacks this doesn't yield the actual task thread_info.
- *
- * We hard rely on the fact that all the TIF_NEED_RESCHED bits are
- * the same, therefore use the slightly more expensive version below.
- */
-#undef tif_need_resched
-#define tif_need_resched() test_tsk_thread_flag(current, TIF_NEED_RESCHED)
-#endif
-
 DECLARE_PER_CPU(int, __preempt_count);
 
 /*
--- a/include/linux/preempt.h
+++ b/include/linux/preempt.h
@@ -15,8 +15,6 @@
  */
 #define PREEMPT_NEED_RESCHED	0x80000000
 
-#define tif_need_resched() test_thread_flag(TIF_NEED_RESCHED)
-
 #include <asm/preempt.h>
 
 #if defined(CONFIG_DEBUG_PREEMPT) || defined(CONFIG_PREEMPT_TRACER)
--- a/include/linux/thread_info.h
+++ b/include/linux/thread_info.h
@@ -118,6 +118,8 @@
 	 */
 }
 
+#define tif_need_resched() test_thread_flag(TIF_NEED_RESCHED)
+
 #if defined TIF_RESTORE_SIGMASK && !defined HAVE_SET_RESTORE_SIGMASK
 /*
  * An arch can define its own version of set_restore_sigmask() to get the
