From: Ben Hutchings <ben@decadent.org.uk>
Date: Tue, 13 May 2014 18:48:29 +0100
Subject: dm: Avoid ABI change in 3.14.4

The dm_bm_flush_and_unlock() function was replaced by dm_bm_flush().
As both callers were changed to call dm_bm_unlock() and then
dm_bm_flush(), restore dm_bm_flush_and_unlock() as a trivial
function that does just that.

--- a/drivers/md/persistent-data/dm-block-manager.c
+++ b/drivers/md/persistent-data/dm-block-manager.c
@@ -604,6 +604,15 @@ int dm_bm_flush(struct dm_block_manager
 }
 EXPORT_SYMBOL_GPL(dm_bm_flush);
 
+int dm_bm_flush_and_unlock(struct dm_block_manager *bm,
+			   struct dm_block *superblock)
+{
+	dm_bm_unlock(superblock);
+
+	return dm_bm_flush(bm);
+}
+EXPORT_SYMBOL_GPL(dm_bm_flush_and_unlock);
+
 void dm_bm_prefetch(struct dm_block_manager *bm, dm_block_t b)
 {
 	dm_bufio_prefetch(bm->bufio, b, 1);
--- a/drivers/md/persistent-data/dm-block-manager.h
+++ b/drivers/md/persistent-data/dm-block-manager.h
@@ -106,6 +106,8 @@ int dm_bm_unlock(struct dm_block *b);
  * This method always blocks.
  */
 int dm_bm_flush(struct dm_block_manager *bm);
+int dm_bm_flush_and_unlock(struct dm_block_manager *bm,
+			   struct dm_block *superblock);
 
 /*
  * Request data is prefetched into the cache.
