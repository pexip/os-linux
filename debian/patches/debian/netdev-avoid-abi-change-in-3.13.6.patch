From: Ben Hutchings <ben@decadent.org.uk>
Date: Mon, 17 Mar 2014 23:57:40 +0000
Subject: netdev: Avoid ABI change in 3.13.6
Forwarded: not-needed

netif_skb_features() was turned from an extern and exported function
into an inline wrapper for netif_skb_dev_features().

- Turn it back into an extern, exported function
- Add the inline definition with '_inline' suffix
- Define a function-macro so the inline function will be used by
  newly compiled code

--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -2986,10 +2986,12 @@ void netif_stacked_transfer_operstate(co
 
 netdev_features_t netif_skb_dev_features(struct sk_buff *skb,
 					 const struct net_device *dev);
-static inline netdev_features_t netif_skb_features(struct sk_buff *skb)
+netdev_features_t netif_skb_features(struct sk_buff *skb);
+static inline netdev_features_t netif_skb_features_inline(struct sk_buff *skb)
 {
 	return netif_skb_dev_features(skb, skb->dev);
 }
+#define netif_skb_features(skb) netif_skb_features_inline(skb)
 
 static inline bool net_gso_ok(netdev_features_t features, int gso_type)
 {
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -6977,3 +6977,10 @@ out:
 }
 
 subsys_initcall(net_dev_init);
+
+#undef netif_skb_features
+netdev_features_t netif_skb_features(struct sk_buff *skb)
+{
+	return netif_skb_dev_features(skb, skb->dev);
+}
+EXPORT_SYMBOL(netif_skb_features);
